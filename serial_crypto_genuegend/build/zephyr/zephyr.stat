ELF Header:
  Magic:   7f 45 4c 46 02 01 01 00 00 00 00 00 00 00 00 00 
  Class:                             ELF64
  Data:                              2's complement, little endian
  Version:                           1 (current)
  OS/ABI:                            UNIX - System V
  ABI Version:                       0
  Type:                              DYN (Shared object file)
  Machine:                           Advanced Micro Devices X86-64
  Version:                           0x1
  Entry point address:               0x26c0
  Start of program headers:          64 (bytes into file)
  Start of section headers:          483064 (bytes into file)
  Flags:                             0x0
  Size of this header:               64 (bytes)
  Size of program headers:           56 (bytes)
  Number of program headers:         13
  Size of section headers:           64 (bytes)
  Number of section headers:         52
  Section header string table index: 51

Section Headers:
  [Nr] Name              Type             Address           Offset
       Size              EntSize          Flags  Link  Info  Align
  [ 0]                   NULL             0000000000000000  00000000
       0000000000000000  0000000000000000           0     0     0
  [ 1] .interp           PROGBITS         0000000000000318  00000318
       000000000000001c  0000000000000000   A       0     0     1
  [ 2] .note.gnu.propert NOTE             0000000000000338  00000338
       0000000000000020  0000000000000000   A       0     0     8
  [ 3] .note.ABI-tag     NOTE             0000000000000358  00000358
       0000000000000020  0000000000000000   A       0     0     4
  [ 4] .gnu.hash         GNU_HASH         0000000000000378  00000378
       0000000000000024  0000000000000000   A       5     0     8
  [ 5] .dynsym           DYNSYM           00000000000003a0  000003a0
       00000000000005b8  0000000000000018   A       6     1     8
  [ 6] .dynstr           STRTAB           0000000000000958  00000958
       0000000000000335  0000000000000000   A       0     0     1
  [ 7] .gnu.version      VERSYM           0000000000000c8e  00000c8e
       000000000000007a  0000000000000002   A       5     0     2
  [ 8] .gnu.version_r    VERNEED          0000000000000d08  00000d08
       00000000000000a0  0000000000000000   A       6     2     8
  [ 9] .rela.dyn         RELA             0000000000000da8  00000da8
       0000000000000b88  0000000000000018   A       5     0     8
  [10] .rela.plt         RELA             0000000000001930  00001930
       00000000000004e0  0000000000000018  AI       5    24     8
  [11] .init             PROGBITS         0000000000002000  00002000
       000000000000001b  0000000000000000  AX       0     0     4
  [12] .plt              PROGBITS         0000000000002020  00002020
       0000000000000350  0000000000000010  AX       0     0     16
  [13] .plt.got          PROGBITS         0000000000002370  00002370
       0000000000000010  0000000000000010  AX       0     0     16
  [14] .plt.sec          PROGBITS         0000000000002380  00002380
       0000000000000340  0000000000000010  AX       0     0     16
  [15] .text             PROGBITS         00000000000026c0  000026c0
       000000000000494a  0000000000000000  AX       0     0     16
  [16] .fini             PROGBITS         000000000000700c  0000700c
       000000000000000d  0000000000000000  AX       0     0     4
  [17] .rodata           PROGBITS         0000000000008000  00008000
       000000000000117a  0000000000000000   A       0     0     16
  [18] .eh_frame_hdr     PROGBITS         000000000000917c  0000917c
       000000000000003c  0000000000000000   A       0     0     4
  [19] .eh_frame         PROGBITS         00000000000091b8  000091b8
       00000000000000e8  0000000000000000   A       0     0     8
  [20] .init_array       INIT_ARRAY       000000000000ab50  00009b50
       0000000000000008  0000000000000008  WA       0     0     8
  [21] .fini_array       FINI_ARRAY       000000000000ab58  00009b58
       0000000000000008  0000000000000008  WA       0     0     8
  [22] .data.rel.ro      PROGBITS         000000000000ab60  00009b60
       0000000000000068  0000000000000000  WA       0     0     32
  [23] .dynamic          DYNAMIC          000000000000abc8  00009bc8
       0000000000000210  0000000000000010  WA       6     0     8
  [24] .got              PROGBITS         000000000000add8  00009dd8
       0000000000000218  0000000000000008  WA       0     0     8
  [25] .data             PROGBITS         000000000000b000  0000a000
       000000000000045e  0000000000000000  WA       0     0     32
  [26] .noinit."../src/m PROGBITS         000000000000b45e  0000a45e
       00000000000003e8  0000000000000000  WA       0     0     1
  [27] .noinit."../src/m PROGBITS         000000000000b848  0000a848
       0000000000000400  0000000000000000  WA       0     0     8
  [28] .noinit."../src/m PROGBITS         000000000000bc48  0000ac48
       0000000000000400  0000000000000000  WA       0     0     8
  [29] .noinit."../src/m PROGBITS         000000000000c048  0000b048
       0000000000000400  0000000000000000  WA       0     0     8
  [30] .noinit."WEST_TOP PROGBITS         000000000000c448  0000b448
       0000000000000100  0000000000000000  WA       0     0     8
  [31] .noinit."WEST_TOP PROGBITS         000000000000c548  0000b548
       0000000000000400  0000000000000000  WA       0     0     8
  [32] .noinit."WEST_TOP PROGBITS         000000000000c948  0000b948
       0000000000000800  0000000000000000  WA       0     0     8
  [33] initlevel         PROGBITS         000000000000d148  0000c148
       0000000000000050  0000000000000000  WA       0     0     8
  [34] device_handles    PROGBITS         000000000000d198  0000c198
       000000000000000e  0000000000000000   A       0     0     2
  [35] devices           PROGBITS         000000000000d1a8  0000c1a8
       0000000000000060  0000000000000000  WA       0     0     8
  [36] _static_thread_da PROGBITS         000000000000d208  0000c208
       0000000000000108  0000000000000000  WA       0     0     8
  [37] k_msgq_area       PROGBITS         000000000000d310  0000c310
       0000000000000048  0000000000000000  WA       0     0     8
  [38] native_pre_tasks  PROGBITS         000000000000d358  0000c358
       0000000000000020  0000000000000000  WA       0     0     8
  [39] .bss              NOBITS           000000000000d380  0000c378
       00000000000008e8  0000000000000000  WA       0     0     32
  [40] .comment          PROGBITS         0000000000000000  0000c378
       000000000000002a  0000000000000001  MS       0     0     1
  [41] .debug_aranges    PROGBITS         0000000000000000  0000c3a2
       00000000000017b0  0000000000000000           0     0     1
  [42] .debug_info       PROGBITS         0000000000000000  0000db52
       0000000000025d8d  0000000000000000           0     0     1
  [43] .debug_abbrev     PROGBITS         0000000000000000  000338df
       000000000000712f  0000000000000000           0     0     1
  [44] .debug_line       PROGBITS         0000000000000000  0003aa0e
       00000000000102d4  0000000000000000           0     0     1
  [45] .debug_frame      PROGBITS         0000000000000000  0004ace8
       0000000000002ef8  0000000000000000           0     0     8
  [46] .debug_str        PROGBITS         0000000000000000  0004dbe0
       00000000000055a6  0000000000000001  MS       0     0     1
  [47] .debug_loc        PROGBITS         0000000000000000  00053186
       0000000000014dfb  0000000000000000           0     0     1
  [48] .debug_ranges     PROGBITS         0000000000000000  00067f81
       0000000000006ed0  0000000000000000           0     0     1
  [49] .symtab           SYMTAB           0000000000000000  0006ee58
       0000000000003eb8  0000000000000018          50   236     8
  [50] .strtab           STRTAB           0000000000000000  00072d10
       0000000000002f27  0000000000000000           0     0     1
  [51] .shstrtab         STRTAB           0000000000000000  00075c37
       00000000000002c0  0000000000000000           0     0     1
Key to Flags:
  W (write), A (alloc), X (execute), M (merge), S (strings), I (info),
  L (link order), O (extra OS processing required), G (group), T (TLS),
  C (compressed), x (unknown), o (OS specific), E (exclude),
  l (large), p (processor specific)

Program Headers:
  Type           Offset             VirtAddr           PhysAddr
                 FileSiz            MemSiz              Flags  Align
  PHDR           0x0000000000000040 0x0000000000000040 0x0000000000000040
                 0x00000000000002d8 0x00000000000002d8  R      0x8
  INTERP         0x0000000000000318 0x0000000000000318 0x0000000000000318
                 0x000000000000001c 0x000000000000001c  R      0x1
      [Requesting program interpreter: /lib64/ld-linux-x86-64.so.2]
  LOAD           0x0000000000000000 0x0000000000000000 0x0000000000000000
                 0x0000000000001e10 0x0000000000001e10  R      0x1000
  LOAD           0x0000000000002000 0x0000000000002000 0x0000000000002000
                 0x0000000000005019 0x0000000000005019  R E    0x1000
  LOAD           0x0000000000008000 0x0000000000008000 0x0000000000008000
                 0x00000000000012a0 0x00000000000012a0  R      0x1000
  LOAD           0x0000000000009b50 0x000000000000ab50 0x000000000000ab50
                 0x0000000000002828 0x0000000000003118  RW     0x1000
  DYNAMIC        0x0000000000009bc8 0x000000000000abc8 0x000000000000abc8
                 0x0000000000000210 0x0000000000000210  RW     0x8
  NOTE           0x0000000000000338 0x0000000000000338 0x0000000000000338
                 0x0000000000000020 0x0000000000000020  R      0x8
  NOTE           0x0000000000000358 0x0000000000000358 0x0000000000000358
                 0x0000000000000020 0x0000000000000020  R      0x4
  GNU_PROPERTY   0x0000000000000338 0x0000000000000338 0x0000000000000338
                 0x0000000000000020 0x0000000000000020  R      0x8
  GNU_EH_FRAME   0x000000000000917c 0x000000000000917c 0x000000000000917c
                 0x000000000000003c 0x000000000000003c  R      0x4
  GNU_STACK      0x0000000000000000 0x0000000000000000 0x0000000000000000
                 0x0000000000000000 0x0000000000000000  RW     0x10
  GNU_RELRO      0x0000000000009b50 0x000000000000ab50 0x000000000000ab50
                 0x00000000000004b0 0x00000000000004b0  R      0x1

 Section to Segment mapping:
  Segment Sections...
   00     
   01     .interp 
   02     .interp .note.gnu.property .note.ABI-tag .gnu.hash .dynsym .dynstr .gnu.version .gnu.version_r .rela.dyn .rela.plt 
   03     .init .plt .plt.got .plt.sec .text .fini 
   04     .rodata .eh_frame_hdr .eh_frame 
   05     .init_array .fini_array .data.rel.ro .dynamic .got .data .noinit."../src/main.c".3 .noinit."../src/main.c".2 .noinit."../src/main.c".1 .noinit."../src/main.c".0 .noinit."WEST_TOPDIR/zephyr/kernel/init.c".2 .noinit."WEST_TOPDIR/zephyr/kernel/init.c".1 .noinit."WEST_TOPDIR/zephyr/kernel/init.c".3 initlevel device_handles devices _static_thread_data_area k_msgq_area native_pre_tasks .bss 
   06     .dynamic 
   07     .note.gnu.property 
   08     .note.ABI-tag 
   09     .note.gnu.property 
   10     .eh_frame_hdr 
   11     
   12     .init_array .fini_array .data.rel.ro .dynamic .got 
